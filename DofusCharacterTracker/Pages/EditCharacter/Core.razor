@page "/edit-character/{CharacterId:guid}/core"
@using DofusCharacterTracker.Database.Tables

@if(Model == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="Model" OnValidSubmit="DoSaveChanges">
        <FluentValidationValidator />

        <p>
            <label>Name</label>
            <InputText @bind-Value="Model.Name"/>
            <ValidationMessage For="() => Model.Name"/>
        </p>

        <p>
            <label>Class</label>
            <InputSelect @bind-Value="Model.Class">
                @foreach(var characterClass in Enum.GetValues<Class>())
                {
                    <option value="@characterClass">@characterClass</option>
                }
            </InputSelect>
            <ValidationMessage For="() => Model.Class"/>
        </p>

        <p>
            <label>Level</label>
            <InputNumber @bind-Value="Model.Level"/>
            <ValidationMessage For="() => Model.Level"/>
        </p>

        <p>
            <label>Elements (optional)</label>
            <ul class="no-bullets elements">
                @for(int i = 0; i < Model.Elements.Count; i++)
                {
                    var elementId = i;
                    <li>
                        <InputElement @bind-Value="Model.Elements[elementId]"/>
                        <button type="button" class="as-text" @onclick="() => RemoveElement(elementId)"><i class="fa-solid fa-trash-can"></i></button>
                    </li>
                }
                <li><button type="button" @onclick="AddElement">+ Add Element</button></li>
            </ul>
        </p>

        <div>
            <a href="/" class="button">Cancel</a>
            <button type="submit">Save</button>
        </div>
    </EditForm>
}
